
as12, an absolute assembler for Motorola MCU's, version 1.2h

                        ; Reverse.asm
                        ;
                        ; Author:               D. Haley, Professor, for CST8216
                        ; Modified by:          <Shahram Ahmad  &&  Wahid Abdul Rahim>
                        ; Student Number(s):    <  040971488    &&      040985017    >
                        ; Lab Section(s):       <    301        &&         302       >
                        ; Course:               CST8216 Fall 2021
                        ; Date:                 <November 26th, 2021>
                        
                        ; Purpose       To copy and reverse an array using the supplied
                        ;               Flowchart while performing the following:
                        ;               additional operations to decrypt the Secret Message.
                        ;               After reading in an 8-bit value from the Source Array,
                        ;               we decrypt the value by
                        ;               a. dividing the value by 2
                        ;               b. then adding 32 to the value
                        ;               c. then storing the value in the Destination Array
                        ;
                        ; Decryption Constants
0002                    DIVISOR         equ     2        ; Values in supplied array will be divided by
                                                        ; this value
0020                    ADDED_VALUE     equ     32      ; Dividend value will have 32 added to it
                        
                        
1000                                    org     $1000
1000                    Source_Array
                        #include A3B_Array.txt
1000 46 4a 48 00 2a 22  	db	$46,$4A,$48,$0,$2A,$22,$0,$66,$52,$0,$5A,$42,$70,$4A
     00 66 52 00 5a 42
     70 4a
                        
                        
                        #endinclude

100e                    End_Source_Array
                        
                        
1020                                    org    $1020    ; Secret Message will appear
                                                        ; starting here
1020                    Destination_Array
1020                                    ds      End_Source_Array-Source_Array   ; auto calculate Array Size
102e                    End_Destination_Array
                        
                        
                        
                        
2000                                    org     $2000
2000 cf 20 00                           lds     #$2000                        ; Initialize Stack
                        
                        
2003 ce 10 0d                           ldx     #End_Source_Array-1           ;start X at beginning of source array
                                                                            ; or i can just say End_Source_Array-1
                                                                          ;decrement x once before to break the gap.
2006 cd 10 20                           ldy     #Destination_Array        ;start Y at end of dest array
                        
                        
2009 e6 3f              B               ldab    1,x-                    ;load contents of source[X] into A and dec x
                        
200b 34                                 pshx
                                        
200c ce 00 02                           ldx     #DIVISOR
200f 18 10                              idiv
                        
                                        
2011 cb 20                              addb     #ADDED_VALUE
2013 1a e6                              leax      d,x
                                        ;ABX
2015 b7 c5                              exg       d,x
                        
                        
2017 6b 70                               stab     1,y+
                        
                        
2019 30                                 pulx
                        
201a 8e 10 00                           cpx     #Source_Array       ;check if y has reached beginning of source_array
201d 18 2c ff e8                        lbge     B                ;keep going, if not true
                                        ;beq       DONE
                                         ;bra       B
                        
2021                    DONE
                                        end
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        

Executed: Wed Dec 15 16:37:04 2021
Total cycles: 39, Total bytes: 47
Total errors: 0, Total warnings: 0
